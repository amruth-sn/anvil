import { UserButton as ClerkUserButton, useUser } from "@clerk/nextjs"
import { clerkConfiguration } from "../../lib/clerk-setup"

export function UserButton() {
  const { user, isLoaded } = useUser()
  
  if (!isLoaded) {
    return (
      <div className="w-8 h-8 rounded-full bg-gray-200 animate-pulse" />
    )
  }
  
  if (!user) {
    return null
  }
  
  return (
    <ClerkUserButton 
      appearance={{ "{{" }}
        elements: {
          avatarBox: "w-8 h-8",
          userButtonPopoverCard: "shadow-lg border",
          userButtonPopoverFooter: "hidden", // Hide Clerk branding
        },
        variables: {
          colorPrimary: "#000000",
          colorBackground: "#ffffff",
          colorInputBackground: "#f3f4f6",
          colorInputText: "#374151",
          borderRadius: "0.5rem",
        }
      {{ "}}" }}
      afterSignOutUrl="/"
      userProfileMode="navigation"
      userProfileUrl="/profile"
    />
  )
}

// Enhanced user button with custom dropdown
export function CustomUserButton() {
  const { user, isLoaded } = useUser()
  
  if (!isLoaded) {
    return (
      <div className="w-8 h-8 rounded-full bg-gray-200 animate-pulse" />
    )
  }
  
  if (!user) {
    return null
  }
  
  return (
    <div className="relative">
      <ClerkUserButton 
        appearance={{ "{{" }}
          elements: {
            avatarBox: "w-10 h-10 rounded-full ring-2 ring-white ring-offset-2 hover:ring-offset-4 transition-all",
            userButtonPopoverCard: "mt-2 shadow-xl border border-gray-200 rounded-lg",
            userButtonPopoverActions: "py-2",
            userButtonPopoverActionButton: "text-sm hover:bg-gray-50 px-4 py-2",
            userButtonPopoverFooter: "border-t pt-2",
          }
        {{ "}}" }}
        afterSignOutUrl="/"
        userProfileMode="navigation" 
        userProfileUrl="/profile"
      >
        <UserButton.MenuItems>
          <UserButton.Action
            label="Profile"
            labelIcon={<ProfileIcon />}
            href="/profile"
          />
          <UserButton.Action
            label="Settings"
            labelIcon={<SettingsIcon />}
            href="/settings"
          />
          {% if clerkConfiguration.features.organizations %}
          <UserButton.Action
            label="Organization"
            labelIcon={<OrganizationIcon />}
            href="/organization"
          />
          {% endif %}
        </UserButton.MenuItems>
      </ClerkUserButton>
    </div>
  )
}

// Simple icon components
function ProfileIcon() {
  return (
    <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
    </svg>
  )
}

function SettingsIcon() {
  return (
    <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
    </svg>
  )
}

{% if clerkConfiguration.features.organizations %}
function OrganizationIcon() {
  return (
    <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
    </svg>
  )
}
{% endif %}