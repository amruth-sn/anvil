'use client'

import { useSession } from "next-auth/react"
import Image from "next/image"
import { SignOutButton } from "./sign-out-button"

interface UserProfileProps {
  className?: string
  showSignOut?: boolean
  showRole?: boolean
}

export function UserProfile({ 
  className = "flex items-center space-x-3",
  showSignOut = true,
  showRole = true
}: UserProfileProps) {
  const { data: session, status } = useSession()

  if (status === "loading") {
    return <UserProfileSkeleton />
  }

  if (!session?.user) {
    return null
  }

  const { user } = session

  return (
    <div className={className}>
      <div className="flex items-center space-x-3">
        {user.image && (
          <Image
            src={user.image}
            alt={user.name || "User avatar"}
            width={40}
            height={40}
            className="rounded-full"
          />
        )}
        <div>
          <p className="text-sm font-medium text-gray-900">
            {user.name || user.email}
          </p>
          {user.email && user.name && (
            <p className="text-xs text-gray-500">{user.email}</p>
          )}
          
          {showRole && user.role && (
            <p className="text-xs text-blue-600 capitalize">{user.role}</p>
          )}
          
        </div>
      </div>
      {showSignOut && (
        <SignOutButton className="ml-3 px-3 py-1 text-sm bg-gray-200 text-gray-700 rounded hover:bg-gray-300 transition-colors">
          Sign Out
        </SignOutButton>
      )}
    </div>
  )
}

// Compact user profile for navigation bars
export function CompactUserProfile() {
  const { data: session, status } = useSession()

  if (status === "loading") {
    return (
      <div className="w-8 h-8 bg-gray-200 rounded-full animate-pulse"></div>
    )
  }

  if (!session?.user) {
    return null
  }

  const { user } = session

  return (
    <div className="flex items-center space-x-2">
      {user.image ? (
        <Image
          src={user.image}
          alt={user.name || "User avatar"}
          width={32}
          height={32}
          className="rounded-full"
        />
      ) : (
        <div className="w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center">
          <span className="text-white text-sm font-medium">
            {(user.name || user.email || "U").charAt(0).toUpperCase()}
          </span>
        </div>
      )}
      <span className="text-sm font-medium text-gray-700 hidden sm:block">
        {user.name || user.email}
      </span>
    </div>
  )
}

// Detailed user profile card
export function UserProfileCard({ className = "bg-white p-6 rounded-lg shadow" }: { className?: string }) {
  const { data: session } = useSession()

  if (!session?.user) {
    return null
  }

  const { user } = session

  return (
    <div className={className}>
      <div className="flex items-center space-x-4">
        {user.image ? (
          <Image
            src={user.image}
            alt={user.name || "User avatar"}
            width={64}
            height={64}
            className="rounded-full"
          />
        ) : (
          <div className="w-16 h-16 bg-blue-500 rounded-full flex items-center justify-center">
            <span className="text-white text-xl font-medium">
              {(user.name || user.email || "U").charAt(0).toUpperCase()}
            </span>
          </div>
        )}
        <div className="flex-1">
          <h3 className="text-lg font-medium text-gray-900">
            {user.name || "User"}
          </h3>
          {user.email && (
            <p className="text-sm text-gray-500">{user.email}</p>
          )}
          
          {user.role && (
            <span className="inline-block mt-1 px-2 py-1 text-xs bg-blue-100 text-blue-800 rounded-full capitalize">
              {user.role}
            </span>
          )}
          
        </div>
      </div>
      
      
      {user.permissions && user.permissions.length > 0 && (
        <div className="mt-4">
          <h4 className="text-sm font-medium text-gray-700 mb-2">Permissions</h4>
          <div className="flex flex-wrap gap-1">
            {user.permissions.map((permission) => (
              <span
                key={permission}
                className="px-2 py-1 text-xs bg-gray-100 text-gray-600 rounded"
              >
                {permission}
              </span>
            ))}
          </div>
        </div>
      )}
      
      
      <div className="mt-4 pt-4 border-t">
        <SignOutButton className="w-full py-2 px-4 bg-red-600 text-white rounded hover:bg-red-700 transition-colors">
          Sign Out
        </SignOutButton>
      </div>
    </div>
  )
}

function UserProfileSkeleton() {
  return (
    <div className="flex items-center space-x-3">
      <div className="w-10 h-10 bg-gray-200 rounded-full animate-pulse"></div>
      <div className="space-y-1">
        <div className="w-24 h-4 bg-gray-200 rounded animate-pulse"></div>
        <div className="w-32 h-3 bg-gray-200 rounded animate-pulse"></div>
      </div>
    </div>
  )
}