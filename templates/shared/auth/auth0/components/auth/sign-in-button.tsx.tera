'use client'

import { signIn, useSession } from "next-auth/react"
import { useState } from "react"

interface SignInButtonProps {
  className?: string
  children?: React.ReactNode
  callbackUrl?: string
  provider?: string
}

export function SignInButton({ 
  className = "px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors",
  children = "Sign In",
  callbackUrl = "/dashboard",
  provider = "auth0"
}: SignInButtonProps) {
  const { data: session, status } = useSession()
  const [isLoading, setIsLoading] = useState(false)

  if (status === "loading") {
    return (
      <button disabled className={className}>
        <div className="flex items-center space-x-2">
          <div className="w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
          <span>Loading...</span>
        </div>
      </button>
    )
  }

  if (session) {
    return null // User is already signed in
  }

  const handleSignIn = async () => {
    setIsLoading(true)
    try {
      await signIn(provider, { callbackUrl })
    } catch (error) {
      console.error("Sign in error:", error)
    } finally {
      setIsLoading(false)
    }
  }

  return (
    <button
      onClick={handleSignIn}
      disabled={isLoading}
      className={className}
    >
      {isLoading ? (
        <div className="flex items-center space-x-2">
          <div className="w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
          <span>Signing in...</span>
        </div>
      ) : (
        children
      )}
    </button>
  )
}

// Alternative sign in button with Auth0 branding
export function Auth0SignInButton({ 
  className = "px-4 py-2 bg-[#EB5424] text-white rounded-md hover:bg-[#d94a1f] transition-colors flex items-center space-x-2",
  callbackUrl = "/dashboard"
}: Omit<SignInButtonProps, 'provider'>) {
  return (
    <SignInButton 
      className={className}
      callbackUrl={callbackUrl}
      provider="auth0"
    >
      <svg className="w-5 h-5" viewBox="0 0 24 24" fill="currentColor">
        <path d="M21.98 7.448L19.62 0H4.347L2.02 7.448c-1.352 4.312.03 9.206 3.815 12.015L12.18 24l6.345-4.537c3.785-2.809 5.167-7.703 3.815-12.015z"/>
      </svg>
      <span>Continue with Auth0</span>
    </SignInButton>
  )
}

// Social login buttons (configured through Auth0)
export function GoogleSignInButton({ callbackUrl = "/dashboard" }: { callbackUrl?: string }) {
  return (
    <SignInButton 
      className="px-4 py-2 bg-white border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 transition-colors flex items-center space-x-2"
      callbackUrl={callbackUrl}
      provider="auth0"
    >
      <svg className="w-5 h-5" viewBox="0 0 24 24">
        <path fill="#4285F4" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"/>
        <path fill="#34A853" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"/>
        <path fill="#FBBC05" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"/>
        <path fill="#EA4335" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"/>
      </svg>
      <span>Continue with Google</span>
    </SignInButton>
  )
}