# {{ project_name }}

{{ project_description | default(value="A modern SaaS application built with Anvil") }}

{% if author_name %}**Created by:** {{ author_name }}{% if author_email %} ({{ author_email }}){% endif %}{% endif %}

## 🚀 Generated with Anvil

This project was generated using [Anvil](https://github.com/amruth-sn/anvil), a universal template engine that creates production-ready applications with enterprise-grade configurations.

## ✨ Features

- ⚡ **Next.js 14** with App Router for optimal performance
- 🔷 **TypeScript** for type safety and better DX
- 🎨 **Tailwind CSS** for rapid UI development
{% if ui_library == "shadcn/ui" %}- 🧩 **shadcn/ui** components - 13+ professional UI components
- 🎯 **Radix UI** primitives for accessibility{% elif ui_library == "nextui" %}- 🧩 **NextUI** components for beautiful interfaces{% endif %}
- 📱 **Responsive Design** that works on all devices
- 🌙 **Dark Mode** support built-in
- 🔧 **{{ package_manager }}** for fast, reliable package management
- 📁 **Modern Project Structure** following Next.js best practices
{% if include_demo_content %}- 🎪 **Demo Content** with interactive examples{% endif %}
{% if setup_git %}- 📚 **Git Ready** with initial repository setup{% endif %}

## 🛠️ Tech Stack

| Category | Technology |
|----------|------------|
| **Framework** | Next.js 14 with App Router |
| **Language** | TypeScript |
| **Styling** | Tailwind CSS |
{% if ui_library == "shadcn/ui" %}| **UI Components** | shadcn/ui + Radix UI |{% elif ui_library == "nextui" %}| **UI Components** | NextUI |{% endif %}
| **Package Manager** | {{ package_manager }} |
{% if database_provider != "none" %}| **Database** | {{ database_provider | title }} |{% endif %}
{% if deployment_target != "none" %}| **Deployment** | {{ deployment_target | title }} |{% endif %}

## 📦 Quick Start

### Prerequisites

- Node.js 18+ installed
{% if package_manager == "pnpm" %}- pnpm installed (`npm install -g pnpm`){% elif package_manager == "yarn" %}- Yarn installed (`npm install -g yarn`){% elif package_manager == "bun" %}- Bun installed ([Install Bun](https://bun.sh/docs/installation)){% endif %}

### Installation

1. **Install dependencies**:
   ```bash
   {{ package_manager }} install
   ```

2. **Start the development server**:
   ```bash
   {{ package_manager }} run dev
   ```

3. **Open your browser** to [http://localhost:3000](http://localhost:3000)

### Available Scripts

| Command | Description |
|---------|-------------|
| `{{ package_manager }} run dev` | Start development server |
| `{{ package_manager }} run build` | Build production application |
| `{{ package_manager }} run start` | Start production server |
| `{{ package_manager }} run lint` | Run ESLint |
| `{{ package_manager }} run type-check` | Run TypeScript compiler |

## 🏗️ Project Structure

```
{{ project_name }}/
├── app/                    # Next.js 14 App Router
│   ├── globals.css        # Global styles and design tokens
│   ├── layout.tsx         # Root layout component
│   └── page.tsx           # Home page
{% if ui_library == "shadcn/ui" %}├── components/             # React components
│   └── ui/                # shadcn/ui components
│       ├── button.tsx     # Button component
│       ├── card.tsx       # Card components
│       ├── dialog.tsx     # Modal dialog
│       ├── input.tsx      # Form input
│       ├── tabs.tsx       # Tab navigation
│       └── ...            # More components
├── lib/                   # Utility functions
│   └── utils.ts          # Tailwind + clsx utilities{% endif %}
├── components.json        # shadcn/ui configuration
├── next.config.js         # Next.js configuration
├── package.json           # Dependencies and scripts
├── tailwind.config.ts     # Tailwind CSS configuration
├── tsconfig.json          # TypeScript configuration
└── README.md             # Project documentation
```

{% if ui_library == "shadcn/ui" %}## 🧩 UI Components

This project includes a comprehensive set of shadcn/ui components:

| Component | Description | Usage |
|-----------|-------------|-------|
| **Button** | Multiple variants and sizes | `<Button variant="outline">Click me</Button>` |
| **Card** | Container with header, content, footer | `<Card><CardHeader>...</CardHeader></Card>` |
| **Badge** | Labels and status indicators | `<Badge variant="secondary">New</Badge>` |
| **Dialog** | Modal dialogs and overlays | `<Dialog><DialogTrigger>...</DialogTrigger></Dialog>` |
| **Input** | Form input fields | `<Input placeholder="Enter text..." />` |
| **Label** | Accessible form labels | `<Label htmlFor="email">Email</Label>` |
| **Tabs** | Tabbed navigation | `<Tabs><TabsList>...</TabsList></Tabs>` |
| **Select** | Dropdown select menus | `<Select><SelectTrigger>...</SelectTrigger></Select>` |
| **Table** | Data tables | `<Table><TableHeader>...</TableHeader></Table>` |
| **Sheet** | Slide-out panels | `<Sheet><SheetTrigger>...</SheetTrigger></Sheet>` |
| **Avatar** | User profile images | `<Avatar><AvatarImage src="..." /></Avatar>` |
| **Separator** | Visual dividers | `<Separator className="my-4" />` |
| **Dropdown Menu** | Context menus | `<DropdownMenu><DropdownMenuTrigger>...</DropdownMenuTrigger></DropdownMenu>` |

### Adding More Components

To add additional shadcn/ui components:

```bash
npx shadcn-ui@latest add [component-name]
```

Example:
```bash
npx shadcn-ui@latest add dropdown-menu
npx shadcn-ui@latest add toast
npx shadcn-ui@latest add form
```
{% endif %}

## 🎨 Styling and Theming

### Design System

The project uses a comprehensive design system with CSS custom properties:

- **Colors**: Primary, secondary, accent, muted, destructive
- **Typography**: Responsive font sizes and line heights  
- **Spacing**: Consistent spacing scale
- **Borders**: Rounded corners and border styles
- **Shadows**: Layered shadow system

### Dark Mode

Dark mode is built-in and automatically respects user preferences:

```tsx
// The theme automatically switches based on system preference
// You can also manually toggle with a theme provider
```

### Customizing Colors

Edit `tailwind.config.ts` to customize your brand colors:

```typescript
extend: {
  colors: {
    primary: {
      DEFAULT: "hsl(var(--primary))",
      foreground: "hsl(var(--primary-foreground))",
    },
    // Add your brand colors here
  },
}
```

## 🚀 Deployment

{% if deployment_target == "vercel" %}### Deploy to Vercel (Recommended)

The easiest way to deploy your Next.js app is to use Vercel:

1. **Push to GitHub**:
   ```bash
   git add .
   git commit -m "Initial commit"
   git push origin main
   ```

2. **Deploy to Vercel**:
   - Visit [vercel.com/new](https://vercel.com/new)
   - Import your GitHub repository
   - Vercel will automatically deploy your app

[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/clone?repository-url={{ github_username | default(value="your-username") }}/{{ project_name | lower | replace(from=' ', to='-') }})
{% elif deployment_target == "railway" %}### Deploy to Railway

Railway provides an easy deployment platform:

1. **Install Railway CLI**:
   ```bash
   npm install -g @railway/cli
   ```

2. **Login and deploy**:
   ```bash
   railway login
   railway link
   railway up
   ```
{% elif deployment_target == "docker" %}### Docker Deployment

Build and run with Docker:

1. **Build the image**:
   ```bash
   docker build -t {{ project_name | lower | replace(from=' ', to='-') }} .
   ```

2. **Run the container**:
   ```bash
   docker run -p 3000:3000 {{ project_name | lower | replace(from=' ', to='-') }}
   ```
{% endif %}

### Environment Variables

Create a `.env.local` file for environment variables:

```bash
# .env.local
NEXT_PUBLIC_APP_URL=http://localhost:3000
{% if database_provider == "supabase" %}NEXT_PUBLIC_SUPABASE_URL=your_supabase_url
NEXT_PUBLIC_SUPABASE_ANON_KEY=your_supabase_anon_key{% elif database_provider == "mongodb" %}MONGODB_URI=your_mongodb_connection_string{% endif %}
```

## 📚 Learn More

### Documentation

- [Next.js Documentation](https://nextjs.org/docs) - Learn about Next.js features and API
- [Tailwind CSS Documentation](https://tailwindcss.com/docs) - Utility-first CSS framework
{% if ui_library == "shadcn/ui" %}- [shadcn/ui Documentation](https://ui.shadcn.com) - Copy and paste components
- [Radix UI Documentation](https://www.radix-ui.com) - Low-level UI primitives{% elif ui_library == "nextui" %}- [NextUI Documentation](https://nextui.org) - Modern React UI library{% endif %}
- [TypeScript Documentation](https://www.typescriptlang.org/docs) - TypeScript language reference

### Anvil Resources

- [Anvil Documentation](https://github.com/amruth-sn/anvil) - Universal template engine
- [Template Gallery](https://github.com/amruth-sn/anvil/tree/main/templates) - Browse more templates
- [Contributing Guide](https://github.com/amruth-sn/anvil/blob/main/CONTRIBUTING.md) - How to contribute

## 🤝 Contributing

Contributions are welcome! Please feel free to submit a Pull Request.

### Development

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/amazing-feature`)
3. Commit your changes (`git commit -m 'Add some amazing feature'`)
4. Push to the branch (`git push origin feature/amazing-feature`)
5. Open a Pull Request

## 📄 License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## 🙏 Acknowledgments

- [Next.js Team](https://nextjs.org) for the amazing framework
- [Vercel](https://vercel.com) for deployment platform
{% if ui_library == "shadcn/ui" %}- [shadcn](https://twitter.com/shadcn) for the beautiful component system{% endif %}
- [Tailwind CSS](https://tailwindcss.com) for the utility-first CSS framework
- [Anvil](https://github.com/amruth-sn/anvil) for the template engine

---

**{{ project_name }}** - Built with ❤️ using [Anvil](https://github.com/amruth-sn/anvil)

{% if github_username %}🔗 **Repository**: [github.com/{{ github_username }}/{{ project_name | lower | replace(from=' ', to='-') }}](https://github.com/{{ github_username }}/{{ project_name | lower | replace(from=' ', to='-') }}){% endif %}